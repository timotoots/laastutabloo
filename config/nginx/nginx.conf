user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    sendfile        on;

    keepalive_timeout  65;

#    upstream relay {
#        server relay:3000;
#    }

    upstream datastore {
        server datastore:5000;
    }

    upstream scrapykeeper {
        server scrapykeeper:5050;
    }

    upstream curator {
        server 172.23.0.100:3030;
    }

    server {
        listen 80;
        # use the docker DNS server to resolve ips for relay and sentry containers
        resolver 127.0.0.11 ipv6=off;
        client_max_body_size 100M;
#        location /api/store/ {
#            proxy_pass http://relay;
#        }
#        location ~ ^/api/[1-9]\d*/ {
#            proxy_pass http://relay;
#        }
        location /datastore {
           rewrite /datastore/(.*) /$1  break;
           proxy_pass http://datastore;
           proxy_redirect     off;
           proxy_set_header   Host $host;  
        }
        location /curator {
           rewrite /curator/(.*) /$1  break;
           proxy_pass http://curator;
           proxy_redirect     off;
           proxy_set_header   Host $host;  
        }
        
        location /scrapykeeper {
           rewrite /scrapykeeper/(.*) /$1  break;
           proxy_pass http://scrapykeeper;
           proxy_redirect     off;
           proxy_set_header   Host $host;  
        }
        location /admin {
            alias /frontend/admin;
            auth_basic "laastutabloo admin";
            auth_basic_user_file /etc/nginx/htpasswd;
        }
       location / {
          alias /frontend/public/;
          allow all;
       }
    }
}
